# This is the main GitHub Actions workflow file.
name: Twitter Bot Scheduler

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-twitter-bots:
    runs-on: ubuntu-latest
    
    env:
      # Supabase Credentials
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

      # --- Twitter Credentials ---
      FORMULA_EMAIL: ${{ secrets.FORMULA_EMAIL }}
      FORMULA_USERNAME: ${{ secrets.FORMULA_USERNAME }}
      FORMULA_PASSWORD: ${{ secrets.FORMULA_PASSWORD }}
      
      TECH_EMAIL: ${{ secrets.TECH_EMAIL }}
      TECH_USERNAME: ${{ secrets.TECH_USERNAME }}
      TECH_PASSWORD: ${{ secrets.TECH_PASSWORD }}

      HOLLYWOOD_EMAIL: ${{ secrets.HOLLYWOOD_EMAIL }}
      HOLLYWOOD_USERNAME: ${{ secrets.HOLLYWOOD_USERNAME }}
      HOLLYWOOD_PASSWORD: ${{ secrets.HOLLYWOOD_PASSWORD }}
      
      MOVIES_EMAIL: ${{ secrets.MOVIES_EMAIL }}
      MOVIES_USERNAME: ${{ secrets.MOVIES_USERNAME }}
      MOVIES_PASSWORD: ${{ secrets.MOVIES_PASSWORD }}

      UNEWS_EMAIL: ${{ secrets.UNEWS_EMAIL }}
      UNEWS_USERNAME: ${{ secrets.UNEWS_USERNAME }}
      UNEWS_PASSWORD: ${{ secrets.UNEWS_PASSWORD }}

      NEWS_EMAIL: ${{ secrets.NEWS_EMAIL }}
      NEWS_USERNAME: ${{ secrets.NEWS_USERNAME }}
      NEWS_PASSWORD: ${{ secrets.NEWS_PASSWORD }}

    steps:
      # Step 1: Check out the repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install Python dependencies.
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install Playwright's browser.
      - name: Install Playwright browsers
        run: playwright install chromium

      # Step 5: Run the main controller script.
      - name: Run Main Bot Controller
        run: python main_controller.py

      # --- DEBUGGING ADDITION ---
      # Step 6: This step will ONLY run if the workflow fails.
      - name: Upload debug artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-screenshots
          # This pattern finds any .png file in any "debug_login" folder.
          path: '*/debug_login/*.png'

      # Step 7: Commit updated session data.
      - name: Commit updated session data
        # This step will run even if the controller fails, to save any partial progress.
        if: always()
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@github.com'
          
          if ! git diff --quiet -- '*/login_data/'; then
            echo "Changes detected in login data. Committing..."
            git add '*/login_data/'
            git commit -m "chore: Update browser session data [skip ci]"
            git push
          else
            echo "No changes in login data. Nothing to commit."
          fi
